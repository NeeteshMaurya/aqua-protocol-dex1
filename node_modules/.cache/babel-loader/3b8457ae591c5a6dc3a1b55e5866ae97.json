{"ast":null,"code":"var _jsxFileName = \"/home/neetesh/Desktop/Aqua-Pancakeswap/AQUA_sourcecode/toModifydex/src/components/Menu/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { allLanguages } from 'constants/localisation/languageCodes';\nimport { LanguageContext } from 'hooks/LanguageContext';\nimport useTheme from 'hooks/useTheme';\nimport useGetPriceData from 'hooks/useGetPriceData';\nimport useGetLocalProfile from 'hooks/useGetLocalProfile';\nimport { connectorsByName } from 'connectors';\nimport links from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  const {\n    account,\n    activate,\n    deactivate\n  } = useWeb3React();\n  const {\n    selectedLanguage,\n    setSelectedLanguage\n  } = useContext(LanguageContext);\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const priceData = useGetPriceData();\n  const cakePriceUsd = priceData ? Number(priceData.prices.Cake) : undefined;\n  const profile = useGetLocalProfile();\n  return /*#__PURE__*/_jsxDEV(UikitMenu, {\n    links: links,\n    account: account,\n    login: connectorId => {\n      const connector = connectorsByName[connectorId];\n\n      if (connector) {\n        activate(connector);\n      }\n    },\n    logout: deactivate,\n    isDark: isDark,\n    toggleTheme: toggleTheme,\n    currentLang: (selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.code) || '',\n    langs: allLanguages,\n    setLang: setSelectedLanguage // cakePriceUsd={cakePriceUsd}\n    // profile={profile}\n    ,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"kW9+lq7k0DAVAolJgTE0le0BKEw=\", false, function () {\n  return [useWeb3React, useTheme, useGetPriceData, useGetLocalProfile];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/neetesh/Desktop/Aqua-Pancakeswap/AQUA_sourcecode/toModifydex/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useGetPriceData","useGetLocalProfile","connectorsByName","links","props","account","activate","deactivate","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","priceData","cakePriceUsd","Number","prices","Cake","undefined","profile","connectorId","connector","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAI,IAAIC,SAAjB,QAAkD,yBAAlD;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMT,IAAc,GAAIU,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAoCX,YAAY,EAAtD;AACA,QAAM;AAAEY,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4ChB,UAAU,CAACK,eAAD,CAA5D;AACA,QAAM;AAAEY,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BZ,QAAQ,EAAxC;AACA,QAAMa,SAAS,GAAGZ,eAAe,EAAjC;AACA,QAAMa,YAAY,GAAGD,SAAS,GAAGE,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiBC,IAAlB,CAAT,GAAmCC,SAAjE;AACA,QAAMC,OAAO,GAAGjB,kBAAkB,EAAlC;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,KAAK,EAAGc,WAAD,IAAiC;AACtC,YAAMC,SAAS,GAAGlB,gBAAgB,CAACiB,WAAD,CAAlC;;AACA,UAAIC,SAAJ,EAAe;AACbd,QAAAA,QAAQ,CAACc,SAAD,CAAR;AACD;AACF,KARH;AASE,IAAA,MAAM,EAAEb,UATV;AAUE,IAAA,MAAM,EAAEG,MAVV;AAWE,IAAA,WAAW,EAAEC,WAXf;AAYE,IAAA,WAAW,EAAE,CAAAH,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEa,IAAlB,KAA0B,EAZzC;AAaE,IAAA,KAAK,EAAExB,YAbT;AAcE,IAAA,OAAO,EAAEY,mBAdX,CAeE;AACA;AAhBF;AAAA,OAiBML;AAjBN;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7BD;;GAAMV,I;UACsCE,Y,EAEVG,Q,EACdC,e,EAEFC,kB;;;KANZP,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Menu as UikitMenu, ConnectorNames } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'constants/localisation/languageCodes'\nimport { LanguageContext } from 'hooks/LanguageContext'\nimport useTheme from 'hooks/useTheme'\nimport useGetPriceData from 'hooks/useGetPriceData'\nimport useGetLocalProfile from 'hooks/useGetLocalProfile'\nimport { connectorsByName } from 'connectors'\nimport links from './config'\n\nconst Menu: React.FC = (props) => {\n  const { account, activate, deactivate } = useWeb3React()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const priceData = useGetPriceData()\n  const cakePriceUsd = priceData ? Number(priceData.prices.Cake) : undefined\n  const profile = useGetLocalProfile()\n\n  return (\n    <UikitMenu\n      links={links}\n      account={account as string}\n      login={(connectorId: ConnectorNames) => {\n        const connector = connectorsByName[connectorId]\n        if (connector) {\n          activate(connector)\n        }\n      }}\n      logout={deactivate}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage?.code || ''}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      // cakePriceUsd={cakePriceUsd}\n      // profile={profile}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}